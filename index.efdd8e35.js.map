{"mappings":"ACEA,IAAM,EAAO,SAAS,aAAa,CAAC,SAEpC,SAAS,EAAW,CAAO,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CACrB,EAAmB,SAAS,aAAa,CAAC,MAEhD,CAAA,EAAiB,WAAW,CAAG,EAC/B,EAAiB,SAAS,CAAG,UAEzB,GACF,EAAiB,SAAS,CAAC,GAAG,CAAC,iBAEjC,SAAS,IAAI,CAAC,MAAM,CAAC,EACvB,CAEA,IAAM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,EAAK,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAQ,wB,EAC/C,GAEM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EAEE,WAAW,WAAM,OAAA,EAAO,wBAA0B,EAAA,IACpD,GAEA,EAAS,IAAI,CACX,SAAC,CADH,EACe,OAAA,EAAW,EACxB,EAAA,SAAC,CAAD,EAAa,OAAA,EAAW,EAAS,CAAA,E,GAGnC,EAAS,KAAK,CAAC,SAAC,CAAhB,EAA4B,OAAA,EAAW,EAAS,CAAA,E","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar logo = document.querySelector(\".logo\");\nfunction addMessage(message) {\n    var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var messageContainer = document.createElement(\"div\");\n    messageContainer.textContent = message;\n    messageContainer.className = \"message\";\n    if (isError) messageContainer.classList.add(\"error-message\");\n    document.body.append(messageContainer);\n}\nvar promise1 = new Promise(function(resolve, reject) {\n    logo.addEventListener(\"click\", function() {\n        return resolve(\"Promise was resolved!\");\n    });\n});\nvar promise2 = new Promise(function(resolve, reject) {\n    // eslint-disable-next-line prefer-promise-reject-errors\n    setTimeout(function() {\n        return reject(\"Promise was rejected!\");\n    }, 3000);\n});\npromise1.then(function(message) {\n    return addMessage(message);\n}, function(message) {\n    return addMessage(message, true);\n});\npromise2.catch(function(message) {\n    return addMessage(message, true);\n});\n\n//# sourceMappingURL=index.efdd8e35.js.map\n","'use strict';\n\nconst logo = document.querySelector('.logo');\n\nfunction addMessage(message, isError = false) {\n  const messageContainer = document.createElement('div');\n\n  messageContainer.textContent = message;\n  messageContainer.className = 'message';\n\n  if (isError) {\n    messageContainer.classList.add('error-message');\n  }\n  document.body.append(messageContainer);\n}\n\nconst promise1 = new Promise((resolve, reject) => {\n  logo.addEventListener('click', () => resolve('Promise was resolved!'));\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  // eslint-disable-next-line prefer-promise-reject-errors\n  setTimeout(() => reject('Promise was rejected!'), 3000);\n});\n\npromise1.then(\n  (message) => addMessage(message),\n  (message) => addMessage(message, true),\n);\n\npromise2.catch((message) => addMessage(message, true));\n"],"names":["logo","document","querySelector","addMessage","message","isError","arguments","length","messageContainer","createElement","textContent","className","classList","add","body","append","promise1","Promise","resolve","reject","addEventListener","promise2","setTimeout","then","catch"],"version":3,"file":"index.efdd8e35.js.map"}